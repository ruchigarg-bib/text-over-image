var SLDS="object"==typeof SLDS?SLDS:{};SLDS["__internal/chunked/docs/ui/components/checkbox-button/docs.mdx.js"]=function(e){function t(t){for(var o,c,i=t[0],u=t[1],s=t[2],d=0,b=[];d<i.length;d++)c=i[d],r[c]&&b.push(r[c][0]),r[c]=0;for(o in u)Object.prototype.hasOwnProperty.call(u,o)&&(e[o]=u[o]);for(l&&l(t);b.length;)b.shift()();return a.push.apply(a,s||[]),n()}function n(){for(var e,t=0;t<a.length;t++){for(var n=a[t],o=!0,i=1;i<n.length;i++){var u=n[i];0!==r[u]&&(o=!1)}o&&(a.splice(t--,1),e=c(c.s=n[0]))}return e}var o={},r={18:0},a=[];function c(t){if(o[t])return o[t].exports;var n=o[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,c),n.l=!0,n.exports}c.m=e,c.c=o,c.d=function(e,t,n){c.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},c.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},c.t=function(e,t){if(1&t&&(e=c(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(c.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)c.d(n,o,function(t){return e[t]}.bind(null,o));return n},c.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return c.d(t,"a",t),t},c.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},c.p="/assets/scripts/bundle/";var i=this.webpackJsonpSLDS___internal_chunked_docs=this.webpackJsonpSLDS___internal_chunked_docs||[],u=i.push.bind(i);i.push=t,i=i.slice();for(var s=0;s<i.length;s++)t(i[s]);var l=u;return a.push([208,0]),n()}({0:function(e,t){e.exports=React},18:function(e,t){e.exports=JSBeautify},19:function(e,t){e.exports=ReactDOM},208:function(e,t,n){"use strict";n.r(t),n.d(t,"getElement",function(){return h}),n.d(t,"getContents",function(){return f});var o=n(0),r=n(3),a=n(69),c=n(1),i=n(2),u=r.c.h2,s=r.c.h3,l=r.c.li,d=r.c.p,b=r.c.ul,h=function(){return Object(o.createElement)(r.b,{},Object(o.createElement)("div",{className:"doc lead"},"A styled checkable input that communicates if an option is being added to a group"),Object(o.createElement)(c.a,{exampleOnly:!0},a.b),u({id:"About-Checkbox-Button"},"About Checkbox Button"),d({},"The ‘add button’ is similar to a checkbox in that it presents a user with a","binary choice for an item. However, the only action a user can take is to","add (or remove) an entity. When a user clicks the add button, the entity is","stored, similar to an ‘add to cart’ experience, until the user saves changes."),d({},"The add button is useful for increasing clarity. Since the button only adds","or removes entities, the user knows the action they will prompt upon click.","The add button also provides a clear visual affordance (in SLDS, we use the","‘+’ icon as an metaphor for ‘add’) and a large target to take this action."),d({},"Use the add button if the component you’re building:"),b({},l({},"Exists without other multi-select elements (i.e. checkboxes)"),l({},"Allows users to select multiple entities"),l({},"Semantically fits the add/remove model")),u({id:"Base"},"Base"),Object(o.createElement)(c.a,null,a.b),u({id:"States"},"States"),s({id:"Checked"},"Checked"),Object(o.createElement)(c.a,null,Object(i.e)(a.c,"checkbox-add-button-checked")),s({id:"Disabled"},"Disabled"),Object(o.createElement)(c.a,null,Object(i.e)(a.c,"checkbox-add-button-disabled")),s({id:"Checked-and-Disabled"},"Checked and Disabled"),Object(o.createElement)(c.a,null,Object(i.e)(a.c,"checkbox-add-button-checked-and-disabled")))},f=function(){return Object(r.a)(h())}}});